services:
  app:
    platform: linux/amd64
    build:
      context: ./api_fastapi/
      dockerfile: Dockerfile
    ports:
      - 8000:8000
    env_file:
      - ./api_fastapi/.env
    volumes:
      - ./api_fastapi:/app
  celery:
    platform: linux/amd64
    build:
      context: ./backend/api_celery/
      dockerfile: Dockerfile
    # volumes:
    #   - shared-volume:/app/data
    depends_on:
      - rabbitmq
  # monitor:
  #   platform: linux/amd64
  #   build:
  #     context: ./backend/api_celery/
  #     dockerfile: Dockerfile.monitor
  #   volumes:
  #     - shared-volume:/app/data
  #   depends_on:
  #     - rabbitmq
  #     - celery
  # splitter-normalizer:
  #   platform: linux/amd64
  #   restart: always
  #   build:
  #     context: ./backend/splitter_normalizer/
  #     dockerfile: Dockerfile
  #   depends_on:
  #     - rabbitmq
  postgres:
    image: postgres:latest
    ports:
      - "5432:5432"
    volumes:
      - db-ah-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1234
      - POSTGRES_DB=do_eat_db 
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"   # RabbitMQ messaging port
      - "15672:15672" # RabbitMQ management UI
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq


volumes:
  db-ah-data:
  rabbitmq_data:
    driver: local
  # shared-volume: